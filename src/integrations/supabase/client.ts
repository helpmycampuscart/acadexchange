
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://vfyaxodigcwtbukaqfyz.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZmeWF4b2RpZ2N3dGJ1a2FxZnl6Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTMxODMxMjMsImV4cCI6MjA2ODc1OTEyM30.RpiaXcqvzHZnXAza4oy0RX4lBVIhJHR3NcR5Uj1bgPM";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
    detectSessionInUrl: true,
  }
});

// Enhanced function to sync user data with better error handling
export const syncUserWithSupabase = async (userId: string, email: string, name: string) => {
  try {
    console.log('Syncing user with Supabase:', { userId, email, name });
    
    // Check if user exists first
    const { data: existingUser, error: checkError } = await supabase
      .from('users')
      .select('id, email, name, role')
      .eq('id', userId)
      .maybeSingle();

    if (checkError) {
      console.error('Error checking existing user:', checkError);
      return { success: false, error: checkError.message };
    }

    if (!existingUser) {
      console.log('Creating new user record');
      const { error } = await supabase
        .from('users')
        .insert({
          id: userId,
          email: email,
          name: name,
          role: 'user'
        });

      if (error) {
        console.error('Error creating user:', error);
        // Don't fail if it's a duplicate key error (user already exists)
        if (error.code === '23505') {
          console.log('User already exists (duplicate key), continuing...');
          return { success: true };
        }
        return { success: false, error: error.message };
      } else {
        console.log('User created successfully');
        return { success: true };
      }
    } else {
      console.log('User already exists:', existingUser);
      
      // Update user info if it has changed
      const needsUpdate = existingUser.email !== email || existingUser.name !== name;
      
      if (needsUpdate) {
        console.log('Updating user info');
        const { error: updateError } = await supabase
          .from('users')
          .update({
            email: email,
            name: name
          })
          .eq('id', userId);

        if (updateError) {
          console.error('Error updating user:', updateError);
          return { success: false, error: updateError.message };
        }
      }
      
      return { success: true };
    }
  } catch (error) {
    console.error('Error syncing user:', error);
    return { success: false, error: 'Failed to sync user' };
  }
};
